<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <AssemblyName>com.aeryle.playerlist</AssemblyName>
    <Product>PlayerList</Product>
    <Version>1.0.1</Version>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>latest</LangVersion>
    <RestoreAdditionalProjectSources>
      https://api.nuget.org/v3/index.json;
      https://nuget.bepinex.dev/v3/index.json;
      https://nuget.samboy.dev/v3/index.json
    </RestoreAdditionalProjectSources>
    <RootNamespace>PlayerList</RootNamespace>
    <OutputPath>release/</OutputPath>
    <SuppressTfmSupportBuildWarnings>true</SuppressTfmSupportBuildWarnings>
  </PropertyGroup>

  <PropertyGroup Condition="$([System.String]::Copy($(DefineConstants)).Contains('IS_ADMIN'))">
    <AssemblyName>com.aeryle.playerlist.admin</AssemblyName>
  </PropertyGroup>

  <!-- Deployment properties (set these to your desired paths) -->
  <PropertyGroup>
    <ModLink>https://github.com/KnightfallModding/PlayerList</ModLink>
    <GameDir>/mnt/g/Decompiled/MelonKnightfall</GameDir>
    <ModsPath>/mnt/g/Decompiled/MelonKnightfall/Mods</ModsPath>
    <ModPath>$(ModsPath)/PlayerList</ModPath>
    <LibsPath>$(GameDir)/UserLibs</LibsPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="LavaGang.MelonLoader" Version="0.7.0" />
    <PackageReference Include="Roslynator.Analyzers" Version="4.13.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Roslynator.Formatting.Analyzers" Version="4.13.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Samboy063.Tomlet" Version="6.0.0" />
  </ItemGroup>

  <ItemGroup>
    <Analyzer Include="./libs/HarmonyPatchAnalyzer.dll" />
  </ItemGroup>

  <ItemGroup>
    <!-- Add UI libs -->
    <Reference Include="ClickableTransparentOverlay">
      <HintPath>libs/runtime/ClickableTransparentOverlay.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Hexa.NET.ImGui">
      <HintPath>libs/runtime/Hexa.NET.ImGui.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="HexaGen.Runtime">
      <HintPath>libs/runtime/HexaGen.Runtime.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <!-- Add game libs -->
    <Reference Include="Assembly-CSharp">
      <HintPath>libs/Assembly-CSharp.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <!-- Add utils -->
    <Reference Include="Il2cppmscorlib">
      <HintPath>libs/Il2cppmscorlib.dll</HintPath>
    </Reference>
    <Reference Include="UniverseLib.ML.IL2CPP.Interop">
      <HintPath>libs/runtime/UniverseLib.ML.IL2CPP.Interop.dll</HintPath>
    </Reference>

    <!-- Add Unity's core modules -->
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>libs/UnityEngine.CoreModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>libs/UnityEngine.InputLegacyModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.InputModule">
      <HintPath>libs/UnityEngine.InputModule.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <!-- Add networking modules -->
    <Reference Include="Il2CppPhoton3Unity3D">
      <HintPath>libs/Il2CppPhoton3Unity3D.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Il2CppPhotonRealtime">
      <HintPath>libs/Il2CppPhotonRealtime.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Il2CppPhotonUnityNetworking">
      <HintPath>libs/Il2CppPhotonUnityNetworking.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <!-- Add MelonLoader modules -->
    <Reference Include="Il2CppInterop.Runtime">
      <HintPath>libs/Il2CppInterop.Runtime.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="Harmony">
      <HintPath>libs/0Harmony.dll</HintPath>
      <Private>False</Private>
    </Reference>

  </ItemGroup>

  <!-- Item groups for deployment files -->
  <ItemGroup>
    <!-- Runtime DLLs from libs/runtime -->
    <RuntimeDlls Include="libs/runtime/*.dll" />
    <!-- All files from assets folder (recursively) -->
    <AssetFiles Include="assets/**" />
  </ItemGroup>

  <Target Name="BuildCustomFiles" BeforeTargets="Build">
    <!-- Mimic BepInEx.PluginInfoProps -->
    <WriteLinesToFile Overwrite="true" File="PlayerListModInfo.cs"
      Lines="namespace PlayerList%3B&#xD;&#xA;&#xD;&#xA;public static class PlayerListModInfo&#xD;&#xA;{&#xD;&#xA;  public const string MOD_NAME = &quot;$(Product)&quot;%3B&#xD;&#xA;  public const string MOD_GUID = &quot;$(AssemblyName)&quot;%3B&#xD;&#xA;  public const string MOD_VERSION = &quot;$(Version)&quot;%3B&#xD;&#xA;  public const string MOD_AUTHOR = &quot;Aeryle&quot;%3B&#xD;&#xA;  public const string MOD_LINK = &quot;$(ModLink)&quot;%3B&#xD;&#xA;}&#xD;&#xA;" />

    <WriteLinesToFile Overwrite="true" File="SecretKeys.cs"
      Lines="namespace PlayerList%3B&#xD;&#xA;&#xD;&#xA;internal static class SecretKeys&#xD;&#xA;{&#xD;&#xA;  public const string AdminToken = &quot;$(ADMIN_TOKEN)&quot;%3B&#xD;&#xA;}&#xD;&#xA;" />
  </Target>

  <!-- Post-build target to mimic build.fish -->
  <Target Name="DeployPlugin">
    <!-- Remove the old plugin directory -->
    <RemoveDir Directories="$(ModPath)" Condition="Exists('$(ModPath)')" />

    <!-- Create necessary directories -->
    <!-- <MakeDir Directories="$(ModPath)/runtime" /> -->
    <MakeDir Directories="$(ModPath)/assets" />

    <!-- Copy runtime DLLs -->
    <Copy SourceFiles="@(RuntimeDlls)" DestinationFolder="$(LibsPath)" />

    <!-- Copy asset files (preserving folder structure relative to assets/) -->
    <Copy SourceFiles="@(AssetFiles)"
      DestinationFiles="@(AssetFiles->'$(ModPath)/assets/%(RecursiveDir)%(Filename)%(Extension)')" />

    <!-- Copy main plugin DLL (assumes output is in release/$(TargetFramework)/) -->
    <Copy SourceFiles="release/$(TargetFramework)/$(AssemblyName).dll"
      DestinationFolder="$(ModsPath)" />

    <!-- Launch the game -->
    <!-- <Exec Command="$(GameDir)/Knightfall.exe" /> -->
  </Target>
</Project>
